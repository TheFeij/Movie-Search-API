// Code generated by MockGen. DO NOT EDIT.
// Source: Movie_Search_API/rapid-api (interfaces: RapidAPIService)
//
// Generated by this command:
//
//	mockgen -package mock -destination rapid-api/mock/rapi_api_services.go Movie_Search_API/rapid-api RapidAPIService
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRapidAPIService is a mock of RapidAPIService interface.
type MockRapidAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockRapidAPIServiceMockRecorder
}

// MockRapidAPIServiceMockRecorder is the mock recorder for MockRapidAPIService.
type MockRapidAPIServiceMockRecorder struct {
	mock *MockRapidAPIService
}

// NewMockRapidAPIService creates a new mock instance.
func NewMockRapidAPIService(ctrl *gomock.Controller) *MockRapidAPIService {
	mock := &MockRapidAPIService{ctrl: ctrl}
	mock.recorder = &MockRapidAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRapidAPIService) EXPECT() *MockRapidAPIServiceMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockRapidAPIService) Find(arg0 string) (map[string]any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0)
	ret0, _ := ret[0].(map[string]any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockRapidAPIServiceMockRecorder) Find(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockRapidAPIService)(nil).Find), arg0)
}
